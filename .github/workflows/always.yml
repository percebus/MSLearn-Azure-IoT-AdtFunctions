name: Verification
on:
  push:
  schedule:
    - cron: '0 0 * * *'

env:
  DOTNET_PROJECT: ./Contoso.AdtFunctions
  DOTNET_VERSION: '3.1.x'
  DOTNET_TARGET_FRAMEWORK: netcoreapp3.1

jobs:

  # SRC https://medium.com/attest-product-and-technology/adding-a-unique-github-build-identifier-7aa2e83cadca
  id:
    name: Build Id
    runs-on: ubuntu-latest
    steps:
      - name: 'id'
        id: id
        run: echo "BUILD_ID=$(date +%s)" >> $GITHUB_ENV
      - name: echo
        run: echo ${{ env.BUILD_ID }}


  build:
    needs: id
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      max-parallel: 2
      matrix:
        configuration:
          - Debug
          - Release
    name: Build:${{ matrix.configuration }}
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: ls
        run: ls -la

      - uses: actions/checkout@v3
      - name: setup .NET:${{ env.DOTNET_VERSION }}
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
      - name: dotnet restore
        run: dotnet restore ${{ env.DOTNET_PROJECT }}
      - name: dotnet build
        run: dotnet build ${{ env.DOTNET_PROJECT }} --no-restore --configuration ${{ matrix.configuration }}

      - name: bin.zip
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.configuration }}
          path: ${{ env.DOTNET_PROJECT }}/bin/${{ matrix.configuration }}/${{ env.DOTNET_TARGET_FRAMEWORK }}


  builds:
    if: github.ref == 'refs/heads/main'
    needs: id
    env:
      DOTNET_CONFIGURATION: Release
    strategy:
      fail-fast: false
      max-parallel: 6
      matrix:
        dotnet-version:
          - '3.x'
#         - '5.x' # TODO? or XXX?
          - '6.x'
        os:
          - ubuntu-latest
          - macOS-latest
          - windows-latest
    runs-on: ${{ matrix.os }}
    name: Build:Release @ .NET:${{ matrix.dotnet-version }}@${{ matrix.os }}
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: ls
        run: ls # windows does not support -la

      - name: setup .NET:${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ matrix.dotnet-version }}
      - name: dotnet restore
        run: dotnet restore ${{ env.DOTNET_PROJECT }}
      - name: dotnet build
        run: dotnet build ${{ env.DOTNET_PROJECT }} --no-restore --configuration ${{ env.DOTNET_CONFIGURATION }}
